syntax = "proto3";

option java_multiple_files = true;

package com.batu.grpc;

message Book {
  string id = 1;
  string title = 2;
  string price = 3;
  int32 page_size = 4;
  string sku_code = 5;
  string author_id = 6;
  BookStatus book_status = 7;
}

message Author {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  Gender gender = 4;
  string address_id = 5;
  string contact_id = 6;
  repeated Book books = 7;
  string salary = 8;
  bool isActive = 9;
}

// Update this areas!

enum Gender {
  MALE = 0;
  FEMALE = 1;
}

enum BookStatus {
  IN_STOCK = 0;
  NOT_IN_STOCK = 1;
  INITIALIZATION = 3;
}

message Address {
  string id = 1;
  string country = 2;
  string city = 3;
  string street = 4;
  int32 postal_code = 5;
  string author_id = 6;
}

message Contact {
  string id = 1;
  string phone_number = 2;
  string email = 3;
  string author_id =4;
}

message CreateAuthorCommand {
   string firstName = 1;
   string lastName = 2;
   Gender gender = 3;
   string salary = 4;
   repeated Book books = 5;
   Address address = 6;
   Contact contact = 7;
}

message CreateAuthorResponse {
  string author_id = 1;
  string tracking_id = 2;
  string address_id = 3;
  string contact_id = 4;
  string message = 5;
}
message CreateBookCommand {
  string author_id = 1;
  string title = 2;
  string price = 3;
  int32 page_size = 4;
  BookStatus book_status = 5;
}

message CreateBookResponse {
  string author_id = 1;
  string tracking_id = 2;
  string address_id = 3;
  string contact_id = 4;
  string message = 5;
}


message TrackBookQuery {
  string sku_code = 1;
}
message TrackAuthorQuery {
  string tracking_id = 1;
}

message TrackBookResponse {
  string book_id = 1;
  string author_id = 2;
  string sku_code = 3;
  BookStatus book_status = 4;
  string message = 5;
}
message TrackAuthorResponse{
  string author_id = 1;
  string address_id = 2;
  string contact_id = 3;
  string message = 4;
}

service ApplicationServiceGrpcServer {
  rpc createBook(CreateBookCommand) returns (CreateBookResponse){}

  rpc trackBook(TrackBookQuery) returns (TrackBookResponse){}

  rpc createAuthor(CreateAuthorCommand) returns (CreateAuthorResponse){}

  rpc trackAuthor(TrackAuthorQuery) returns(TrackAuthorResponse){}

}